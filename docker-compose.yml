services:
  vector_db:
    build:
      context: ./vector_db
      dockerfile: Dockerfile
    volumes:
      - ./data:/app/data
      - ./hypnoq_index:/app/hypnoq_index
    ports:
      - "5000:5000"
    environment:
      - DATA_PATH=/app/data
      - INDEX_NAME=/app/hypnoq_index
  
  models:
    build:
      context: ./models
      dockerfile: Dockerfile
    volumes:
      - ./hypnoq_index:/app/hypnoq_index
    ports:
    - "8000:8000"
    - "8888:8888" 
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - INDEX_NAME=/app/hypnoq_index
    #command: ["jupyter", "lab", "--ip=0.0.0.0", "--port=8888", "--no-browser", "--allow-root"]
      
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8501:8501"
    depends_on:
      - models
    environment:
      - CHATBOT_URL=http://models:8000/hypno-bot  
  
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_AUTH_DISABLE_LOGIN_FORM=false
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_USERS_ALLOW_ORG_CREATE=false
      - GF_USERS_AUTO_ASSIGN_ORG=true
      - GF_USERS_AUTO_ASSIGN_ORG_ROLE=Viewer
      - GF_SECURITY_SECRET_KEY=${GRAFANA_SECRET_KEY:-your_secret_key_here}
    depends_on:
      - postgres

# Define the volume at the bottom of the file
volumes:
  postgres_data:
  grafana_data:

